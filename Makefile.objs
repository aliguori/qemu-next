CONFIG_FSDEV=n
ifeq ($(CONFIG_VIRTFS),y)
ifeq ($(CONFIG_LINUX),y)
CONFIG_FSDEV=y
endif
endif

#######################################################################
# Subdir makefiles

common-obj-y =

include $(SRC_PATH)/qobject/Makefile
common-obj-y += $(addprefix qobject/, $(qobject-obj-y))

include $(SRC_PATH)/fsdev/Makefile
common-obj-y += $(addprefix fsdev/, $(fsdev-nested-y))

include $(SRC_PATH)/net/Makefile
common-obj-y += $(addprefix net/, $(net-nested-y))

include $(SRC_PATH)/audio/Makefile
common-obj-y += $(addprefix audio/, $(audio-obj-y))

include $(SRC_PATH)/ui/Makefile
common-obj-y += $(addprefix ui/, $(ui-obj-y))

include $(SRC_PATH)/slirp/Makefile
common-obj-y += $(addprefix slirp/, $(slirp-obj-y))

include $(SRC_PATH)/qapi/Makefile
common-obj-y += $(addprefix qapi/, $(qapi-nested-y))

include $(SRC_PATH)/hw/Makefile
common-obj-y += $(hw-obj-y)

include $(SRC_PATH)/oslib/Makefile
common-obj-y += $(addprefix oslib/,$(oslib-obj-y))

#######################################################################
# coroutines
coroutine-obj-y = qemu-coroutine.o qemu-coroutine-lock.o qemu-coroutine-io.o
ifeq ($(CONFIG_UCONTEXT_COROUTINE),y)
coroutine-obj-$(CONFIG_POSIX) += coroutine-ucontext.o
else
coroutine-obj-$(CONFIG_POSIX) += coroutine-gthread.o
endif
coroutine-obj-$(CONFIG_WIN32) += coroutine-win32.o

#######################################################################
# block-obj-y is code used by both qemu system emulation and qemu-img

block-obj-y = cutils.o cache-utils.o qemu-option.o module.o async.o
block-obj-y += nbd.o block.o aio.o aes.o qemu-config.o qemu-progress.o qemu-sockets.o
block-obj-y += $(coroutine-obj-y) 
block-obj-y += $(addprefix qobject/,$(qobject-obj-y))
block-obj-y += $(version-obj-y)
block-obj-$(CONFIG_POSIX) += posix-aio-compat.o
block-obj-$(CONFIG_LINUX_AIO) += linux-aio.o

include $(SRC_PATH)/block/Makefile
block-obj-y +=  $(addprefix block/, $(block-nested-y))

common-obj-y += net.o

######################################################################
# Target independent part of system emulation. The long term path is to
# suppress *all* target specific code in case of system emulation, i.e. a
# single QEMU executable should support all CPUs and machines.

common-obj-y += $(block-obj-y) blockdev.o
common-obj-y += readline.o console.o cursor.o

common-obj-y += tcg-runtime.o host-utils.o main-loop.o
common-obj-y += irq.o input.o

common-obj-y += buffered_file.o migration.o migration-tcp.o
common-obj-y += qemu-char.o #aio.o
common-obj-y += block-migration.o iohandler.o
common-obj-y += pflib.o
common-obj-y += bitmap.o bitops.o

common-obj-y += iov.o acl.o
common-obj-$(CONFIG_POSIX) += compatfd.o
common-obj-y += notify.o event_notifier.o
common-obj-y += qemu-timer.o qemu-timer-common.o

common-obj-$(CONFIG_SPICE) += spice-qemu-char.o

######################################################################
# libuser

user-obj-y =
user-obj-y += envlist.o path.o
user-obj-y += tcg-runtime.o host-utils.o
user-obj-y += cutils.o cache-utils.o
user-obj-y += $(trace-obj-y)

common-obj-y += vl.o

######################################################################
# libdis
# NOTE: the disassembler code is only needed for debugging

libdis-y =
libdis-$(CONFIG_ALPHA_DIS) += alpha-dis.o
libdis-$(CONFIG_ARM_DIS) += arm-dis.o
libdis-$(CONFIG_CRIS_DIS) += cris-dis.o
libdis-$(CONFIG_HPPA_DIS) += hppa-dis.o
libdis-$(CONFIG_I386_DIS) += i386-dis.o
libdis-$(CONFIG_IA64_DIS) += ia64-dis.o
libdis-$(CONFIG_M68K_DIS) += m68k-dis.o
libdis-$(CONFIG_MICROBLAZE_DIS) += microblaze-dis.o
libdis-$(CONFIG_MIPS_DIS) += mips-dis.o
libdis-$(CONFIG_PPC_DIS) += ppc-dis.o
libdis-$(CONFIG_S390_DIS) += s390-dis.o
libdis-$(CONFIG_SH4_DIS) += sh4-dis.o
libdis-$(CONFIG_SPARC_DIS) += sparc-dis.o

include $(SRC_PATH)/Makefile.trace

######################################################################
# smartcard

libcacard-y = cac.o event.o vcard.o vreader.o vcard_emul_nss.o vcard_emul_type.o card_7816.o

######################################################################
# qapi

common-obj-y += qmp-marshal.o qapi-visit.o qapi-types.o
common-obj-y += qmp.o hmp.o

######################################################################
# guest agent

qga-nested-y = guest-agent-commands.o guest-agent-command-state.o
qga-obj-y = $(addprefix qga/, $(qga-nested-y))
qga-obj-y += qemu-ga.o qemu-sockets.o module.o qemu-option.o
qga-obj-$(CONFIG_WIN32) += oslib-win32.o
qga-obj-$(CONFIG_POSIX) += oslib-posix.o

vl.o: QEMU_CFLAGS+=$(GPROF_CFLAGS)

vl.o: QEMU_CFLAGS+=$(SDL_CFLAGS)

QEMU_CFLAGS+=$(GLIB_CFLAGS)
